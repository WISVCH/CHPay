plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'pmd'
	id 'com.diffplug.spotless' version '7.0.3'
}

group = 'CHPay'
version = '0.0.1-SNAPSHOT'


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf:thymeleaf-spring6'
	implementation 'org.thymeleaf:thymeleaf'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.retry:spring-retry:2.0.5'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation("org.springframework.boot:spring-boot-starter-cache")
	implementation("com.github.ben-manes.caffeine:caffeine")
	implementation 'be.woutschoovaerts:mollie:4.6.0'
	implementation 'com.microsoft.playwright:playwright:1.51.0'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
	testImplementation 'org.mockito:mockito-inline:5.2.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.webjars:webjars-locator-core'
	implementation 'org.webjars.npm:vanillajs-datepicker:1.3.4'
	implementation 'org.webjars.npm:chart.js:4.4.9'

	implementation 'com.google.zxing:core:3.5.3'
	implementation 'com.google.zxing:javase:3.5.3'

}

test {
	jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}", '-Xshare:off'
	useJUnitPlatform {
		excludeTags 'playwright'
	}
	finalizedBy jacocoTestReport, jacocoTestCoverageVerification
}

tasks.register('playwrightTest', Test) {
	useJUnitPlatform {
		includeTags 'playwright'
	}
	testClassesDirs = sourceSets.test.output.classesDirs
	classpath = sourceSets.test.runtimeClasspath
}


jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'chpay/paymentbackend/Auth/TestAuthController.class',
					'chpay/paymentbackend/Auth/TestAuthController$*.class' // inner classes, if any
			])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				//increase when actually coding, 0,1 doesnt fail the pipeline for now
				minimum = 0.8
			}
		}
	}
}

pmd {
	toolVersion = "6.55.0"
	ignoreFailures = true
	ruleSets = [
			"category/java/bestpractices.xml",
			"category/java/errorprone.xml",
			"category/java/codestyle.xml"
	]
}


spotless {
	java {
		googleJavaFormat()

	}
}
