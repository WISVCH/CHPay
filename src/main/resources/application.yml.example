spring:
  profiles:
    active: ${SPRING_ACTIVE_PROFILE:test}
  application:
    name: chpay
    baseurl: ${BASE_URL:http://localhost:8080}
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${MAIL_USERNAME:wisvchpay@gmail.com}
    password: ${MAIL_PASSWORD:kjsy czls zvvn ldxg}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  cache:
    cache-names: systemFrozen, maxBalance, minTopUp
    caffeine:
      spec: recordStats,maximumSize=10,expireAfterWrite=5m
  jpa:
    show-sql: false
    generate-ddl: true
    hibernate:
      ddl-auto: create
    # defer-datasource-initialization: true
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  datasource:
    url: ${TRANSACTION_DB_URL:jdbc:postgresql://localhost:5432/chpay}
    username: ${TRANSACTION_DB_USER:chpay}
    password: ${TRANSACTION_DB_PASS:secret}
    driver-class-name: org.postgresql.Driver
  security:
    oauth2:
      client:
        registration:
          wisvchconnect:
            client-id: ${CHCONNECT_CLIENT_ID}
            client-secret: ${CHCONNECT_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
              - student
              - auth
            redirect-uri: ${spring.application.baseurl}/login/oauth2/code/wisvchlogin
        provider:
          wisvchconnect:
            issuer-uri: https://login.wisv.ch/realms/wisvch
  thymeleaf:
    prefix: classpath:/templates/
mollie:
  api_key: ${MOLLIE_API_KEY}
  redirect_url: ${spring.application.baseurl}/topup/complete/
  webhook_url:  ${spring.application.baseurl}/topup/status #Webhook doesn't work with localhost, url must be reachable from mollie
  transaction_fee: ${TRANSACTION_FEE:0.32}
chpay:
  admin_groups:
    - beheer
    - bestuur
    - vc
  claim_name: google_groups
  transactions:
    expire_every_minutes: ${EXPIRE_EVERY_MINUTE:20}
    expiration_fixed_rate: ${EXPIRATION_FIXED_RATE:1}
  paymentrequests:
    expire_every_months: ${REQUEST_EXPIRATION_CUTOFF:1}
  settings:
    mintopup: ${MIN_TOPUP:2}
  api_key: ${EVENTS_API_KEY:} #Api key to be used when redirecting from events, just set it to whatever
logging:
  level:
    org.hibernate.loader.Loader: WARN
    org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess: WARN
server:
  forward-headers-strategy: native
